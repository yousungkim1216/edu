{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "914b000e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "url = \"https://finance.naver.com/sise/\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0645befc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "다우산업33,706.74하락\n",
      " 나스닥12,705.22하락\n",
      " 홍콩H6,719.88상승\n",
      " 상해종합3,258.08하락\n",
      " 니케이22528,930.33하락\n",
      "\n"
     ]
    }
   ],
   "source": [
    "req = requests.get(url)\n",
    "# html 정보에서 text정보만 추출\n",
    "html = req.text\n",
    "soup = BeautifulSoup(html, 'html.parser')\n",
    "\n",
    "# my_stock 변수에 select 할 내용을 찾아서 넣어준다\n",
    "my_stock = soup.select('.lst_pop')\n",
    "#my_stock = soup.select('.lst_major')\n",
    "\n",
    "for stock_name in my_stock:\n",
    "    print(stock_name.text)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "949db80c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<span class=\"num _au_real_list\">@code@</span>,\n",
       " <span class=\"num num2\" id=\"KOSPI_now\">2,492.69</span>,\n",
       " <span class=\"num num2\" id=\"KOSDAQ_now\">814.17</span>,\n",
       " <span class=\"num num2\" id=\"KPI200_now\">326.79</span>]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import urllib.request\n",
    "\n",
    "# 웹사이트 정보 요청\n",
    "page = urllib.request.urlopen(url)\n",
    "\n",
    "# 해당 페이지는 cp949 방식의 인코딩 사용\n",
    "html = page.read().decode('cp949')\n",
    "\n",
    "soup = BeautifulSoup(html, 'html.parser')\n",
    "\n",
    "soup.select('span.num')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d590cfca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2492.69"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "soup.select('span.num')[1]\n",
    "soup.select('span.num')[1].string\n",
    "float(soup.select('span.num')[1].string.replace(',', ''))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "99bfca56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2,492.69'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# input으로 id = 'KOSPI_now' 처럼 지정\n",
    "soup.find(id = 'KOSPI_now')\n",
    "# string 속성을 가져와 원하는 데이터까지 도달\n",
    "soup.find(id = 'KOSPI_now').string\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "108e64a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<span class=\"num_s num_s2\" id=\"KOSPI_change\">\n",
       "<span class=\"ndown\"></span>15.36 -0.61%<span class=\"blind\">상승</span>\n",
       "</span>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 코스피 등락률 크롤링\n",
    "soup.find(id = 'KOSPI_change')\n",
    "#soup.find(id = 'KOSPI_change').contents\n",
    "\n",
    "#soup.find(id = 'KOSPI_change').contents[2]\n",
    "#soup.find(id = 'KOSPI_change').contents[2].split()\n",
    "\n",
    "#soup.find(id = 'KOSPI_change').contents[3].string\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4088555e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 크롤링을 할 때, 해당 사이트에서 컴퓨터로 인식해서 데이터 추출을 방해하는 경우\n",
    "# User-Agent 설정\n",
    "\n",
    "def NS_users_crawler(codes, page):\n",
    "    # User-Agent 설정\n",
    "    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36'}\n",
    "    result_df = pd.DataFrame([])\n",
    "\n",
    "    n_ = 0\n",
    "    for page in range(1, page):\n",
    "        n_ += 1\n",
    "        if (n_ % 10 == 0):\n",
    "            print('================== Page ' + str(page) + ' is done ==================')\n",
    "        url = \"https://finance.naver.com/item/board.naver?code=%s&page=%s\" % (codes, str(page))\n",
    "        # html → parsing\n",
    "        html = requests.get(url, headers=headers).content\n",
    "        # 한글 깨짐 방지 decode\n",
    "        soup = BeautifulSoup(html.decode('euc-kr', 'replace'), 'html.parser')\n",
    "        table = soup.find('table', {'class': 'type2'})\n",
    "        tb = table.select('tbody > tr')\n",
    "\n",
    "        for i in range(2, len(tb)):\n",
    "            if len(tb[i].select('td > span')) > 0:\n",
    "                date = tb[i].select('td > span')[0].text\n",
    "                title = tb[i].select('td.title > a')[0]['title']\n",
    "                views = tb[i].select('td > span')[1].text\n",
    "                pos = tb[i].select('td > strong')[0].text\n",
    "                neg = tb[i].select('td > strong')[1].text\n",
    "                table = pd.DataFrame({'날짜': [date], '제목': [title], '조회': [views], '공감': [pos], '비공감': [neg]})\n",
    "                result_df = result_df.append(table)\n",
    "\n",
    "    return result_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8b13ec59",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n",
      "C:\\Users\\user\\AppData\\Local\\Temp\\ipykernel_40456\\594316629.py:30: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
      "  result_df = result_df.append(table)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>날짜</th>\n",
       "      <th>제목</th>\n",
       "      <th>조회</th>\n",
       "      <th>공감</th>\n",
       "      <th>비공감</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:41</td>\n",
       "      <td>망해라 주당2000원짜리</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:36</td>\n",
       "      <td>난 토스쓴다</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:36</td>\n",
       "      <td>어차피 정부차원이나 1금융권은행들 입장에서는</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:32</td>\n",
       "      <td>국민은행이 항복햇다!</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:25</td>\n",
       "      <td>시총 아직높은거알지??</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:24</td>\n",
       "      <td>카뱅임원들 회사차원에 자사주매입</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:16</td>\n",
       "      <td>음 내 예언대로 지하실에 도착했꾼!!</td>\n",
       "      <td>69</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:15</td>\n",
       "      <td>시총 13조 실화임?</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:12</td>\n",
       "      <td>대표적인 K뱅크의 우수성을....</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022.08.21 14:11</td>\n",
       "      <td>9만원대</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 날짜                        제목  조회 공감 비공감\n",
       "0  2022.08.21 14:41             망해라 주당2000원짜리   1  0   0\n",
       "0  2022.08.21 14:36                    난 토스쓴다   5  0   0\n",
       "0  2022.08.21 14:36  어차피 정부차원이나 1금융권은행들 입장에서는  12  0   0\n",
       "0  2022.08.21 14:32               국민은행이 항복햇다!  16  0   0\n",
       "0  2022.08.21 14:25              시총 아직높은거알지??  14  1   0\n",
       "0  2022.08.21 14:24         카뱅임원들 회사차원에 자사주매입  19  0   0\n",
       "0  2022.08.21 14:16      음 내 예언대로 지하실에 도착했꾼!!  69  0   0\n",
       "0  2022.08.21 14:15               시총 13조 실화임?  29  0   0\n",
       "0  2022.08.21 14:12        대표적인 K뱅크의 우수성을....  42  0   0\n",
       "0  2022.08.21 14:11                      9만원대  40  0   0"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = NS_users_crawler(\"323410\", 3)\n",
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "eac4bd15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>주요재무정보</th>\n",
       "      <th colspan=\"4\" halign=\"left\">최근 연간 실적</th>\n",
       "      <th colspan=\"6\" halign=\"left\">최근 분기 실적</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>주요재무정보</th>\n",
       "      <th>2019.12</th>\n",
       "      <th>2020.12</th>\n",
       "      <th>2021.12</th>\n",
       "      <th>2022.12(E)</th>\n",
       "      <th>2021.03</th>\n",
       "      <th>2021.06</th>\n",
       "      <th>2021.09</th>\n",
       "      <th>2021.12</th>\n",
       "      <th>2022.03</th>\n",
       "      <th>2022.06(E)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>주요재무정보</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "      <th>IFRS별도</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>매출액</td>\n",
       "      <td>6649</td>\n",
       "      <td>8042</td>\n",
       "      <td>10649</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2249.00</td>\n",
       "      <td>2536.00</td>\n",
       "      <td>2773.00</td>\n",
       "      <td>3091.00</td>\n",
       "      <td>3384.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>영업이익</td>\n",
       "      <td>133</td>\n",
       "      <td>1226</td>\n",
       "      <td>2569</td>\n",
       "      <td>3876</td>\n",
       "      <td>540.00</td>\n",
       "      <td>798.00</td>\n",
       "      <td>712.00</td>\n",
       "      <td>520.00</td>\n",
       "      <td>884.00</td>\n",
       "      <td>1080.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>당기순이익</td>\n",
       "      <td>137</td>\n",
       "      <td>1136</td>\n",
       "      <td>2041</td>\n",
       "      <td>2846</td>\n",
       "      <td>467.00</td>\n",
       "      <td>693.00</td>\n",
       "      <td>520.00</td>\n",
       "      <td>362.00</td>\n",
       "      <td>668.00</td>\n",
       "      <td>741.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>영업이익률</td>\n",
       "      <td>1.99</td>\n",
       "      <td>15.24</td>\n",
       "      <td>24.13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24.00</td>\n",
       "      <td>31.46</td>\n",
       "      <td>25.67</td>\n",
       "      <td>16.81</td>\n",
       "      <td>26.12</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>순이익률</td>\n",
       "      <td>2.07</td>\n",
       "      <td>14.13</td>\n",
       "      <td>19.17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20.74</td>\n",
       "      <td>27.32</td>\n",
       "      <td>18.75</td>\n",
       "      <td>11.70</td>\n",
       "      <td>19.74</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ROE(지배주주)</td>\n",
       "      <td>0.97</td>\n",
       "      <td>5.08</td>\n",
       "      <td>4.91</td>\n",
       "      <td>5.05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.91</td>\n",
       "      <td>5.34</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>부채비율</td>\n",
       "      <td>1253.66</td>\n",
       "      <td>852.82</td>\n",
       "      <td>552.74</td>\n",
       "      <td>NaN</td>\n",
       "      <td>904.27</td>\n",
       "      <td>928.23</td>\n",
       "      <td>548.19</td>\n",
       "      <td>552.74</td>\n",
       "      <td>606.07</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>당좌비율</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>유보율</td>\n",
       "      <td>-8.04</td>\n",
       "      <td>37.22</td>\n",
       "      <td>132.40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.12</td>\n",
       "      <td>41.98</td>\n",
       "      <td>130.61</td>\n",
       "      <td>132.40</td>\n",
       "      <td>133.21</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>EPS(원)</td>\n",
       "      <td>51</td>\n",
       "      <td>309</td>\n",
       "      <td>467</td>\n",
       "      <td>598</td>\n",
       "      <td>114.00</td>\n",
       "      <td>169.00</td>\n",
       "      <td>114.00</td>\n",
       "      <td>76.00</td>\n",
       "      <td>141.00</td>\n",
       "      <td>156.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>PER(배)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>126.36</td>\n",
       "      <td>47.93</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>126.36</td>\n",
       "      <td>104.41</td>\n",
       "      <td>198.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>BPS(원)</td>\n",
       "      <td>4598</td>\n",
       "      <td>6861</td>\n",
       "      <td>11620</td>\n",
       "      <td>12083</td>\n",
       "      <td>6956.00</td>\n",
       "      <td>7099.00</td>\n",
       "      <td>11531.00</td>\n",
       "      <td>11620.00</td>\n",
       "      <td>11660.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>PBR(배)</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>5.08</td>\n",
       "      <td>2.37</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.93</td>\n",
       "      <td>5.08</td>\n",
       "      <td>4.43</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>주당배당금(원)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>시가배당률(%)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>배당성향(%)</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       주요재무정보 최근 연간 실적                            최근 분기 실적                     \\\n",
       "       주요재무정보  2019.12 2020.12 2021.12 2022.12(E)  2021.03  2021.06   2021.09   \n",
       "       주요재무정보   IFRS별도  IFRS별도  IFRS별도     IFRS별도   IFRS별도   IFRS별도    IFRS별도   \n",
       "0         매출액     6649    8042   10649        NaN  2249.00  2536.00   2773.00   \n",
       "1        영업이익      133    1226    2569       3876   540.00   798.00    712.00   \n",
       "2       당기순이익      137    1136    2041       2846   467.00   693.00    520.00   \n",
       "3       영업이익률     1.99   15.24   24.13        NaN    24.00    31.46     25.67   \n",
       "4        순이익률     2.07   14.13   19.17        NaN    20.74    27.32     18.75   \n",
       "5   ROE(지배주주)     0.97    5.08    4.91       5.05      NaN      NaN       NaN   \n",
       "6        부채비율  1253.66  852.82  552.74        NaN   904.27   928.23    548.19   \n",
       "7        당좌비율      NaN     NaN     NaN        NaN      NaN      NaN       NaN   \n",
       "8         유보율    -8.04   37.22  132.40        NaN    39.12    41.98    130.61   \n",
       "9      EPS(원)       51     309     467        598   114.00   169.00    114.00   \n",
       "10     PER(배)      NaN     NaN  126.36      47.93      NaN      NaN       NaN   \n",
       "11     BPS(원)     4598    6861   11620      12083  6956.00  7099.00  11531.00   \n",
       "12     PBR(배)        -       -    5.08       2.37      NaN      NaN      5.93   \n",
       "13   주당배당금(원)      NaN     NaN     NaN          -      NaN      NaN       NaN   \n",
       "14   시가배당률(%)      NaN     NaN     NaN        NaN      NaN      NaN       NaN   \n",
       "15    배당성향(%)        -       -       -        NaN      NaN      NaN       NaN   \n",
       "\n",
       "                                   \n",
       "     2021.12   2022.03 2022.06(E)  \n",
       "      IFRS별도    IFRS별도     IFRS별도  \n",
       "0    3091.00   3384.00        NaN  \n",
       "1     520.00    884.00     1080.0  \n",
       "2     362.00    668.00      741.0  \n",
       "3      16.81     26.12        NaN  \n",
       "4      11.70     19.74        NaN  \n",
       "5       4.91      5.34        NaN  \n",
       "6     552.74    606.07        NaN  \n",
       "7        NaN       NaN        NaN  \n",
       "8     132.40    133.21        NaN  \n",
       "9      76.00    141.00      156.0  \n",
       "10    126.36    104.41      198.7  \n",
       "11  11620.00  11660.00        NaN  \n",
       "12      5.08      4.43        NaN  \n",
       "13       NaN       NaN        NaN  \n",
       "14       NaN       NaN        NaN  \n",
       "15       NaN       NaN        NaN  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "code = '323410'\n",
    "URL = f\"https://finance.naver.com/item/main.nhn?code={code}\"\n",
    "r = requests.get(URL)\n",
    "df = pd.read_html(r.text)[3]\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "21b6b9a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "code = '005930'\n",
    "URL = f\"https://finance.naver.com/item/main.nhn?code={code}\"\n",
    "r = requests.get(URL)\n",
    "df = pd.read_html(r.text)[3]\n",
    "df.set_index(df.columns[0],inplace=True)\n",
    "df.index.rename('주요재무정보', inplace=True)\n",
    "df.columns = df.columns.droplevel(2)\n",
    "annual_date = pd.DataFrame(df).xs('최근 연간 실적',axis=1)\n",
    "quater_date = pd.DataFrame(df).xs('최근 분기 실적',axis=1)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
